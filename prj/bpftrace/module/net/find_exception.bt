#!/bin/bpftrace
#include <linux/skbuff.h>
#include <net/ip.h>
#include <net/inet_sock.h>
#include <net/inet_sock.h>
#include <linux/socket.h>
#include <linux/tcp.h>
#include <net/sock.h>
#include <net/route.h>
#include <net/dst.h>
#include <net/ip_fib.h>

kretprobe:find_exception
{
  $fnhe=(struct fib_nh_exception *)retval;
  if (!retval) {
    return;
  }

  $rtable = (struct rtable *)$fnhe->fnhe_rth_output;
  $daddr = ntop($fnhe->fnhe_daddr);
  //@sb[$prt] += 1;
  @sa[$fnhe] += 1;
  if ( $rtable->dst.obsolete != -1 ) {
    //printf("%d %lx %ld %s\n", $rtable->dst.obsolete, $rtable, $fnhe->fnhe_expires, $daddr);
    printf("%lx %lx %ld %s\n", $rtable, $fnhe, $fnhe->fnhe_expires, $daddr);
  } else {
    //printf("info %d %d %ld %s \n", $rtable->dst.obsolete, $rtable->rt_genid, $fnhe->fnhe_expires, $daddr);
    printf("info %lx %lx %ld %s\n", $rtable, $fnhe, $fnhe->fnhe_expires, $daddr);
  }
  
}
